# Generated by Django 2.1.7 on 2022-04-22 15:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdminInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(max_length=32, verbose_name='账号')),
                ('password', models.CharField(max_length=64, verbose_name='密码')),
                ('identity', models.CharField(max_length=64, null=True, verbose_name='身份')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='电影名称')),
                ('director', models.CharField(max_length=255, verbose_name='导演名称')),
                ('country', models.CharField(max_length=255, verbose_name='地区')),
                ('years', models.DateField(verbose_name='上映日期')),
                ('leader', models.CharField(max_length=1024, verbose_name='主演')),
                ('d_rate_nums', models.IntegerField(verbose_name='豆瓣评价数')),
                ('d_rate', models.CharField(max_length=255, null=True, verbose_name='豆瓣评分')),
                ('intro', models.TextField(verbose_name='描述')),
                ('num', models.IntegerField(default=0, verbose_name='浏览量')),
                ('origin_image_link', models.URLField(max_length=255, null=True, verbose_name='豆瓣图片地址')),
                ('image_link', models.FileField(max_length=255, upload_to='movie_cover', verbose_name='封面图片')),
                ('imdb_link', models.URLField(null=True)),
                ('language', models.CharField(max_length=500, null=True, verbose_name='语言')),
                ('label', models.TextField(verbose_name='标签')),
                ('long', models.CharField(max_length=255, null=True, verbose_name='片长')),
            ],
        ),
        migrations.CreateModel(
            name='NewMovie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='电影名称')),
                ('years', models.CharField(max_length=255, verbose_name='上映年份')),
                ('leader', models.TextField(verbose_name='主演')),
                ('d_rate', models.CharField(max_length=255, verbose_name='评分')),
                ('director', models.CharField(max_length=255, verbose_name='导演')),
                ('type', models.CharField(max_length=255, verbose_name='类型')),
                ('country', models.CharField(max_length=255, verbose_name='国家')),
                ('intro', models.TextField(verbose_name='描述')),
                ('image_link', models.URLField(max_length=255, null=True, verbose_name='封面图片')),
                ('language', models.CharField(max_length=500, null=True, verbose_name='语言')),
                ('long', models.CharField(max_length=255, null=True, verbose_name='片长')),
            ],
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='标题')),
                ('url', models.CharField(max_length=128, verbose_name='含正则的URL')),
                ('icon', models.CharField(blank=True, max_length=32, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.FloatField(verbose_name='评分')),
                ('comment', models.TextField(null=True, verbose_name='评论内容')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='发布时间')),
                ('movie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='movie.Movie', verbose_name='电影id')),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='类别')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(max_length=255, unique=True, verbose_name='账号')),
                ('password', models.CharField(max_length=255, verbose_name='密码')),
                ('email', models.EmailField(max_length=254, verbose_name='邮箱')),
                ('created_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AddField(
            model_name='rate',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='movie.User', verbose_name='用户id'),
        ),
        migrations.AddField(
            model_name='movie',
            name='collect',
            field=models.ManyToManyField(blank=True, to='movie.User', verbose_name='收藏者'),
        ),
        migrations.AddField(
            model_name='movie',
            name='tags',
            field=models.ManyToManyField(blank=True, to='movie.Tags', verbose_name='类别'),
        ),
        migrations.AddField(
            model_name='admininfo',
            name='permissions',
            field=models.ManyToManyField(blank=True, to='movie.Permission', verbose_name='拥有的所有权限'),
        ),
    ]
